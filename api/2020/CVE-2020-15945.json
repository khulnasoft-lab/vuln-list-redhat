{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Ceph Storage 3",
      "fix_state": "Affected",
      "package_name": "ceph",
      "cpe": "cpe:/a:redhat:ceph_storage:3"
    },
    {
      "product_name": "Red Hat Ceph Storage 4",
      "fix_state": "Affected",
      "package_name": "ceph",
      "cpe": "cpe:/a:redhat:ceph_storage:4"
    },
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "lua",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "lua",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "lua",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "lua",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2020-07-09T00:00:00Z",
  "bugzilla": {
    "description": "lua: segmentation fault in changedline in ldebug.c",
    "id": "1861999",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1861999"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-20",
  "statement": "Red Hat Ceph Storage 3 and 4 ships vulnerable version of Lua(embedded in Ceph), however Lua is no longer supported in Ceph.\nWithin regulated environments, a combination of the following controls acts as a significant barrier to successfully exploiting a CWE-20: Improper Input Validation vulnerability and therefore downgrades the severity of this particular CVE from Moderate to Low.\nRed Hat enforces the principle of least functionality, ensuring that only essential features, services, and ports are enabled. This minimizes the number of components that could be affected by input validation vulnerabilities. Security testing and evaluation standards are implemented within the environment to rigorously test input validation mechanisms during the development lifecycle, while static code analysis identifies potential input validation vulnerabilities by default. Process isolation ensures that processes handling potentially malicious or unvalidated inputs run in isolated environments by separating execution domains for each process. Malicious code protections, such as IPS/IDS and antimalware solutions, help detect and mitigate malicious payloads stemming from input validation vulnerabilities. Finally, robust input validation and error-handling mechanisms ensure all user inputs are thoroughly validated, preventing improperly validated inputs from causing system instability, exposing sensitive data, or escalating risks further.",
  "acknowledgement": "",
  "name": "CVE-2020-15945",
  "document_distribution": "",
  "details": [
    "Lua 5.4.0 (fixed in 5.4.1) has a segmentation fault in changedline in ldebug.c (e.g., when called by luaG_traceexec) because it incorrectly expects that an oldpc value is always updated upon a return of the flow of control to a function.",
    "A flaw was found in lua. A segmentation fault is possible because it incorrectly expects that an oldpc value is always updated upon a return of the flow of control to a function."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2020-15945\nhttps://nvd.nist.gov/vuln/detail/CVE-2020-15945"
  ]
}