{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Fix deferred",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Fix deferred",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2025-05-08T00:00:00Z",
  "bugzilla": {
    "description": "kernel: bpf: Fix kmemleak warning for percpu hashmap",
    "id": "2365021",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2365021"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "7.0",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2025-37807",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nbpf: Fix kmemleak warning for percpu hashmap\nVlad Poenaru reported the following kmemleak issue:\nunreferenced object 0x606fd7c44ac8 (size 32):\nbacktrace (crc 0):\npcpu_alloc_noprof+0x730/0xeb0\nbpf_map_alloc_percpu+0x69/0xc0\nprealloc_init+0x9d/0x1b0\nhtab_map_alloc+0x363/0x510\nmap_create+0x215/0x3a0\n__sys_bpf+0x16b/0x3e0\n__x64_sys_bpf+0x18/0x20\ndo_syscall_64+0x7b/0x150\nentry_SYSCALL_64_after_hwframe+0x4b/0x53\nFurther investigation shows the reason is due to not 8-byte aligned\nstore of percpu pointer in htab_elem_set_ptr():\n*(void __percpu **)(l-\u003ekey + key_size) = pptr;\nNote that the whole htab_elem alignment is 8 (for x86_64). If the key_size\nis 4, that means pptr is stored in a location which is 4 byte aligned but\nnot 8 byte aligned. In mm/kmemleak.c, scan_block() scans the memory based\non 8 byte stride, so it won't detect above pptr, hence reporting the memory\nleak.\nIn htab_map_alloc(), we already have\nhtab-\u003eelem_size = sizeof(struct htab_elem) +\nround_up(htab-\u003emap.key_size, 8);\nif (percpu)\nhtab-\u003eelem_size += sizeof(void *);\nelse\nhtab-\u003eelem_size += round_up(htab-\u003emap.value_size, 8);\nSo storing pptr with 8-byte alignment won't cause any problem and can fix\nkmemleak too.\nThe issue can be reproduced with bpf selftest as well:\n1. Enable CONFIG_DEBUG_KMEMLEAK config\n2. Add a getchar() before skel destroy in test_hash_map() in prog_tests/for_each.c.\nThe purpose is to keep map available so kmemleak can be detected.\n3. run './test_progs -t for_each/hash_map \u0026' and a kmemleak should be reported."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2025-37807\nhttps://nvd.nist.gov/vuln/detail/CVE-2025-37807\nhttps://lore.kernel.org/linux-cve-announce/2025050815-CVE-2025-37807-d31f@gregkh/T"
  ]
}