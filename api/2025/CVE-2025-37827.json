{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Low",
  "public_date": "2025-05-08T00:00:00Z",
  "bugzilla": {
    "description": "kernel: btrfs: zoned: return EIO on RAID1 block group write pointer mismatch",
    "id": "2365020",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2365020"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2025-37827",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nbtrfs: zoned: return EIO on RAID1 block group write pointer mismatch\nThere was a bug report about a NULL pointer dereference in\n__btrfs_add_free_space_zoned() that ultimately happens because a\nconversion from the default metadata profile DUP to a RAID1 profile on two\ndisks.\nThe stack trace has the following signature:\nBTRFS error (device sdc): zoned: write pointer offset mismatch of zones in raid1 profile\nBUG: kernel NULL pointer dereference, address: 0000000000000058\n#PF: supervisor read access in kernel mode\n#PF: error_code(0x0000) - not-present page\nPGD 0 P4D 0\nOops: Oops: 0000 [#1] PREEMPT SMP NOPTI\nRIP: 0010:__btrfs_add_free_space_zoned.isra.0+0x61/0x1a0\nRSP: 0018:ffffa236b6f3f6d0 EFLAGS: 00010246\nRAX: 0000000000000000 RBX: ffff96c8132f3400 RCX: 0000000000000001\nRDX: 0000000010000000 RSI: 0000000000000000 RDI: ffff96c8132f3410\nRBP: 0000000010000000 R08: 0000000000000003 R09: 0000000000000000\nR10: 0000000000000000 R11: 00000000ffffffff R12: 0000000000000000\nR13: ffff96c758f65a40 R14: 0000000000000001 R15: 000011aac0000000\nFS: 00007fdab1cb2900(0000) GS:ffff96e60ca00000(0000) knlGS:0000000000000000\nCS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000058 CR3: 00000001a05ae000 CR4: 0000000000350ef0\nCall Trace:\n\u003cTASK\u003e\n? __die_body.cold+0x19/0x27\n? page_fault_oops+0x15c/0x2f0\n? exc_page_fault+0x7e/0x180\n? asm_exc_page_fault+0x26/0x30\n? __btrfs_add_free_space_zoned.isra.0+0x61/0x1a0\nbtrfs_add_free_space_async_trimmed+0x34/0x40\nbtrfs_add_new_free_space+0x107/0x120\nbtrfs_make_block_group+0x104/0x2b0\nbtrfs_create_chunk+0x977/0xf20\nbtrfs_chunk_alloc+0x174/0x510\n? srso_return_thunk+0x5/0x5f\nbtrfs_inc_block_group_ro+0x1b1/0x230\nbtrfs_relocate_block_group+0x9e/0x410\nbtrfs_relocate_chunk+0x3f/0x130\nbtrfs_balance+0x8ac/0x12b0\n? srso_return_thunk+0x5/0x5f\n? srso_return_thunk+0x5/0x5f\n? __kmalloc_cache_noprof+0x14c/0x3e0\nbtrfs_ioctl+0x2686/0x2a80\n? srso_return_thunk+0x5/0x5f\n? ioctl_has_perm.constprop.0.isra.0+0xd2/0x120\n__x64_sys_ioctl+0x97/0xc0\ndo_syscall_64+0x82/0x160\n? srso_return_thunk+0x5/0x5f\n? __memcg_slab_free_hook+0x11a/0x170\n? srso_return_thunk+0x5/0x5f\n? kmem_cache_free+0x3f0/0x450\n? srso_return_thunk+0x5/0x5f\n? srso_return_thunk+0x5/0x5f\n? syscall_exit_to_user_mode+0x10/0x210\n? srso_return_thunk+0x5/0x5f\n? do_syscall_64+0x8e/0x160\n? sysfs_emit+0xaf/0xc0\n? srso_return_thunk+0x5/0x5f\n? srso_return_thunk+0x5/0x5f\n? seq_read_iter+0x207/0x460\n? srso_return_thunk+0x5/0x5f\n? vfs_read+0x29c/0x370\n? srso_return_thunk+0x5/0x5f\n? srso_return_thunk+0x5/0x5f\n? syscall_exit_to_user_mode+0x10/0x210\n? srso_return_thunk+0x5/0x5f\n? do_syscall_64+0x8e/0x160\n? srso_return_thunk+0x5/0x5f\n? exc_page_fault+0x7e/0x180\nentry_SYSCALL_64_after_hwframe+0x76/0x7e\nRIP: 0033:0x7fdab1e0ca6d\nRSP: 002b:00007ffeb2b60c80 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\nRAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007fdab1e0ca6d\nRDX: 00007ffeb2b60d80 RSI: 00000000c4009420 RDI: 0000000000000003\nRBP: 00007ffeb2b60cd0 R08: 0000000000000000 R09: 0000000000000013\nR10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000\nR13: 00007ffeb2b6343b R14: 00007ffeb2b60d80 R15: 0000000000000001\n\u003c/TASK\u003e\nCR2: 0000000000000058\n---[ end trace 0000000000000000 ]---\nThe 1st line is the most interesting here:\nBTRFS error (device sdc): zoned: write pointer offset mismatch of zones in raid1 profile\nWhen a RAID1 block-group is created and a write pointer mismatch between\nthe disks in the RAID set is detected, btrfs sets the alloc_offset to the\nlength of the block group marking it as full. Afterwards the code expects\nthat a balance operation will evacuate the data in this block-group and\nrepair the problems.\nBut before this is possible, the new space of this block-group will be\naccounted in the free space cache. But in __btrfs_\n---truncated---"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2025-37827\nhttps://nvd.nist.gov/vuln/detail/CVE-2025-37827\nhttps://lore.kernel.org/linux-cve-announce/2025050822-CVE-2025-37827-13be@gregkh/T"
  ]
}