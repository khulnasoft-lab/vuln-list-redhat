{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Fix deferred",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Fix deferred",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2025-05-02T00:00:00Z",
  "bugzilla": {
    "description": "kernel: ice: xsk: disable txq irq before flushing hw",
    "id": "2363719",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2363719"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2023-53102",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nice: xsk: disable txq irq before flushing hw\nice_qp_dis() intends to stop a given queue pair that is a target of xsk\npool attach/detach. One of the steps is to disable interrupts on these\nqueues. It currently is broken in a way that txq irq is turned off\n*after* HW flush which in turn takes no effect.\nice_qp_dis():\n-\u003e ice_qvec_dis_irq()\n--\u003e disable rxq irq\n--\u003e flush hw\n-\u003e ice_vsi_stop_tx_ring()\n--\u003edisable txq irq\nBelow splat can be triggered by following steps:\n- start xdpsock WITHOUT loading xdp prog\n- run xdp_rxq_info with XDP_TX action on this interface\n- start traffic\n- terminate xdpsock\n[  256.312485] BUG: kernel NULL pointer dereference, address: 0000000000000018\n[  256.319560] #PF: supervisor read access in kernel mode\n[  256.324775] #PF: error_code(0x0000) - not-present page\n[  256.329994] PGD 0 P4D 0\n[  256.332574] Oops: 0000 [#1] PREEMPT SMP NOPTI\n[  256.337006] CPU: 3 PID: 32 Comm: ksoftirqd/3 Tainted: G           OE      6.2.0-rc5+ #51\n[  256.345218] Hardware name: Intel Corporation S2600WFT/S2600WFT, BIOS SE5C620.86B.02.01.0008.031920191559 03/19/2019\n[  256.355807] RIP: 0010:ice_clean_rx_irq_zc+0x9c/0x7d0 [ice]\n[  256.361423] Code: b7 8f 8a 00 00 00 66 39 ca 0f 84 f1 04 00 00 49 8b 47 40 4c 8b 24 d0 41 0f b7 45 04 66 25 ff 3f 66 89 04 24 0f 84 85 02 00 00 \u003c49\u003e 8b 44 24 18 0f b7 14 24 48 05 00 01 00 00 49 89 04 24 49 89 44\n[  256.380463] RSP: 0018:ffffc900088bfd20 EFLAGS: 00010206\n[  256.385765] RAX: 000000000000003c RBX: 0000000000000035 RCX: 000000000000067f\n[  256.393012] RDX: 0000000000000775 RSI: 0000000000000000 RDI: ffff8881deb3ac80\n[  256.400256] RBP: 000000000000003c R08: ffff889847982710 R09: 0000000000010000\n[  256.407500] R10: ffffffff82c060c0 R11: 0000000000000004 R12: 0000000000000000\n[  256.414746] R13: ffff88811165eea0 R14: ffffc9000d255000 R15: ffff888119b37600\n[  256.421990] FS:  0000000000000000(0000) GS:ffff8897e0cc0000(0000) knlGS:0000000000000000\n[  256.430207] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  256.436036] CR2: 0000000000000018 CR3: 0000000005c0a006 CR4: 00000000007706e0\n[  256.443283] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[  256.450527] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[  256.457770] PKRU: 55555554\n[  256.460529] Call Trace:\n[  256.463015]  \u003cTASK\u003e\n[  256.465157]  ? ice_xmit_zc+0x6e/0x150 [ice]\n[  256.469437]  ice_napi_poll+0x46d/0x680 [ice]\n[  256.473815]  ? _raw_spin_unlock_irqrestore+0x1b/0x40\n[  256.478863]  __napi_poll+0x29/0x160\n[  256.482409]  net_rx_action+0x136/0x260\n[  256.486222]  __do_softirq+0xe8/0x2e5\n[  256.489853]  ? smpboot_thread_fn+0x2c/0x270\n[  256.494108]  run_ksoftirqd+0x2a/0x50\n[  256.497747]  smpboot_thread_fn+0x1c1/0x270\n[  256.501907]  ? __pfx_smpboot_thread_fn+0x10/0x10\n[  256.506594]  kthread+0xea/0x120\n[  256.509785]  ? __pfx_kthread+0x10/0x10\n[  256.513597]  ret_from_fork+0x29/0x50\n[  256.517238]  \u003c/TASK\u003e\nIn fact, irqs were not disabled and napi managed to be scheduled and run\nwhile xsk_pool pointer was still valid, but SW ring of xdp_buff pointers\nwas already freed.\nTo fix this, call ice_qvec_dis_irq() after ice_vsi_stop_tx_ring(). Also\nwhile at it, remove redundant ice_clean_rx_ring() call - this is handled\nin ice_qp_clean_rings()."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2023-53102\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-53102\nhttps://lore.kernel.org/linux-cve-announce/2025050224-CVE-2023-53102-13fd@gregkh/T"
  ]
}