{
  "affected_release": [
    {
      "product_name": "Red Hat Build of Keycloak",
      "release_date": "2024-09-09T00:00:00Z",
      "advisory": "RHSA-2024:6503",
      "package": "keycloak-core",
      "cpe": "cpe:/a:redhat:build_keycloak:24"
    },
    {
      "product_name": "Red Hat build of Keycloak 24",
      "release_date": "2024-09-09T00:00:00Z",
      "advisory": "RHSA-2024:6502",
      "package": "rhbk/keycloak-operator-bundle:24.0.7-4",
      "cpe": "cpe:/a:redhat:build_keycloak:24::el9"
    },
    {
      "product_name": "Red Hat build of Keycloak 24",
      "release_date": "2024-09-09T00:00:00Z",
      "advisory": "RHSA-2024:6502",
      "package": "rhbk/keycloak-rhel9:24-16",
      "cpe": "cpe:/a:redhat:build_keycloak:24::el9"
    },
    {
      "product_name": "Red Hat build of Keycloak 24",
      "release_date": "2024-09-09T00:00:00Z",
      "advisory": "RHSA-2024:6502",
      "package": "rhbk/keycloak-rhel9-operator:24-16",
      "cpe": "cpe:/a:redhat:build_keycloak:24::el9"
    }
  ],
  "package_state": null,
  "threat_severity": "Moderate",
  "public_date": "2024-09-09T13:55:00Z",
  "bugzilla": {
    "description": "keycloak-core: Open Redirect on Account page",
    "id": "2301875",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2301875"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "6.1",
    "cvss3_scoring_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
    "status": "verified"
  },
  "iava": "",
  "cwe": "CWE-601",
  "statement": "Red Hat has evaluated this vulnerability and it only affects the Red Hat Build of Keycloak (RHBK).\nWithin regulated environments, a combination of the following controls acts as a significant barrier to successfully exploiting a CWE-601: URL Redirection to Untrusted Site ('Open Redirect') vulnerability and therefore downgrades the severity of this particular CVE from Moderate to Low.\nThe platform limits access to external systems and enforces strict network security boundaries through a deny-all, allow-exception system implementation. This ensures that access to external websites and systems is strictly controlled, monitored, and, if necessary, restricted. By enforcing policies on which external sites or domains users and applications can interact with, this control minimizes the risk of users being redirected to malicious websites. For example, organizations may implement allowlists of approved URLs or domains, blocking any redirections to untrusted or unauthorized sites. The platform's implementation of boundary protection includes firewalls, gateways, and intrusion detection/prevention systems. This control prevents unauthorized traffic, including malicious redirect requests, from entering or leaving the internal network. The boundary protection control can enforce URL filtering, domain allowlisting, and content inspection to block redirection attempts to known malicious domains. When configured properly, boundary protection mechanisms ensure that even if an open redirect vulnerability is exploited, the impact is limited by blocking access to harmful external sites.",
  "acknowledgement": "This issue was discovered by Todd Cullum (Red Hat).",
  "name": "CVE-2024-7260",
  "document_distribution": "",
  "details": [
    "An open redirect vulnerability was found in Keycloak. A specially crafted URL can be constructed where the referrer and referrer_uri parameters are made to trick a user to visit a malicious webpage. A trusted URL can trick users and automation into believing that the URL is safe, when, in fact, it redirects to a malicious server. This issue can result in a victim inadvertently trusting the destination of the redirect, potentially leading to a successful phishing attack or other types of attacks.\nOnce a crafted URL is made, it can be sent to a Keycloak admin via email for example. This will trigger this vulnerability when the user visits the page and clicks the link. A malicious actor can use this to target users they know are Keycloak admins for further attacks. It may also be possible to bypass other domain-related security checks, such as supplying this as a OAuth redirect uri. The malicious actor can further obfuscate the redirect_uri using URL encoding, to hide the text of the actual malicious website domain.",
    "An open redirect vulnerability was found in Keycloak. A specially crafted URL can be constructed where the referrer and referrer_uri parameters are made to trick a user to visit a malicious webpage. A trusted URL can trick users and automation into believing that the URL is safe, when, in fact, it redirects to a malicious server. This issue can result in a victim inadvertently trusting the destination of the redirect, potentially leading to a successful phishing attack or other types of attacks.\nOnce a crafted URL is made, it can be sent to a Keycloak admin via email for example. This will trigger this vulnerability when the user visits the page and clicks the link. A malicious actor can use this to target users they know are Keycloak admins for further attacks. It may also be possible to bypass other domain-related security checks, such as supplying this as a OAuth redirect uri. The malicious actor can further obfuscate the redirect_uri using URL encoding, to hide the text of the actual malicious website domain."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-7260\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-7260"
  ]
}