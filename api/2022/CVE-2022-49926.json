{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2025-05-01T00:00:00Z",
  "bugzilla": {
    "description": "kernel: net: dsa: Fix possible memory leaks in dsa_loop_init()",
    "id": "2363481",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2363481"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2022-49926",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nnet: dsa: Fix possible memory leaks in dsa_loop_init()\nkmemleak reported memory leaks in dsa_loop_init():\nkmemleak: 12 new suspected memory leaks\nunreferenced object 0xffff8880138ce000 (size 2048):\ncomm \"modprobe\", pid 390, jiffies 4295040478 (age 238.976s)\nbacktrace:\n[\u003c000000006a94f1d5\u003e] kmalloc_trace+0x26/0x60\n[\u003c00000000a9c44622\u003e] phy_device_create+0x5d/0x970\n[\u003c00000000d0ee2afc\u003e] get_phy_device+0xf3/0x2b0\n[\u003c00000000dca0c71f\u003e] __fixed_phy_register.part.0+0x92/0x4e0\n[\u003c000000008a834798\u003e] fixed_phy_register+0x84/0xb0\n[\u003c0000000055223fcb\u003e] dsa_loop_init+0xa9/0x116 [dsa_loop]\n...\nThere are two reasons for memleak in dsa_loop_init().\nFirst, fixed_phy_register() create and register phy_device:\nfixed_phy_register()\nget_phy_device()\nphy_device_create() # freed by phy_device_free()\nphy_device_register() # freed by phy_device_remove()\nBut fixed_phy_unregister() only calls phy_device_remove().\nSo the memory allocated in phy_device_create() is leaked.\nSecond, when mdio_driver_register() fail in dsa_loop_init(),\nit just returns and there is no cleanup for phydevs.\nFix the problems by catching the error of mdio_driver_register()\nin dsa_loop_init(), then calling both fixed_phy_unregister() and\nphy_device_free() to release phydevs.\nAlso add a function for phydevs cleanup to avoid duplacate."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2022-49926\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-49926\nhttps://lore.kernel.org/linux-cve-announce/2025050110-CVE-2022-49926-d9bc@gregkh/T"
  ]
}