{
  "Class": "vulnerability",
  "ID": "oval:com.redhat.cve:def:20248508",
  "Version": "636",
  "Metadata": {
    "Title": "unbound: Unbounded name compression could lead to Denial of Service (moderate)",
    "References": [
      {
        "Source": "CVE",
        "RefID": "CVE-2024-8508",
        "RefURL": "https://access.redhat.com/security/cve/CVE-2024-8508"
      }
    ],
    "Description": "DOCUMENTATION: A flaw was found in Unbound which can lead to degraded performance and an eventual denial of service when handling replies with very large RRsets that require name compression to be applied. Versions prior to 1.21.1 do not have a hard limit on the number of name compression calculations that Unbound can perform per packet, meaning that if a specially crafted query is passed for the contents of a malicious zone with very large RRsets, Unbound may spend a considerable amount of time applying name compression to downstream replies, locking the CPU until the whole packet has been processed. \n            STATEMENT: Within regulated environments, a combination of the following controls acts as a significant barrier to successfully exploiting a CWE-606: Unchecked Input for Loop Condition vulnerability and therefore downgrades the severity of this particular CVE from Moderate to Low.\n\nInput validation controls are in place, which ensure that any input controlling loop behavior is validated against strict criteria like type, length, and range before being processed. This prevents malicious or abnormal inputs from causing excessive or infinite iterations, thereby avoiding logic errors or system overloads. Memory protection controls such as Data Execution Prevention (DEP) and Address Space Layout Randomization (ASLR) protect the systemâ€™s memory from overuse or corruption if an unchecked input were to cause a loop to execute excessively. It ensures that memory is safely allocated and accessed, reducing the risks of buffer overflows, resource exhaustion, or crashes. Lastly, the implementation of security engineering principles dictates the use of secure coding practices such as input validation, loop iteration limits, and error handling, which are integrated during system design and development.",
    "Advisory": {
      "From": "secalert@redhat.com",
      "Severity": "Moderate",
      "Issued": {},
      "Updated": {
        "Date": "2025-05-02"
      },
      "Cves": [
        {
          "CveID": "CVE-2024-8508",
          "Cvss3": "5.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
          "Cwe": "CWE-606",
          "Impact": "moderate",
          "Href": "https://access.redhat.com/security/cve/CVE-2024-8508",
          "Public": "20241003:1627"
        }
      ],
      "AffectedCpeList": [
        "cpe:/a:redhat:openshift:4.18",
        "cpe:/a:redhat:openshift:4.18::el9"
      ],
      "Affected": {
        "Resolution": {
          "State": "Affected"
        }
      }
    }
  },
  "Criteria": {
    "Operator": "OR",
    "Criterions": [
      {
        "Comment": "Red Hat Enterprise Linux must be installed",
        "TestRef": "oval:com.redhat.cve:tst:201714623006"
      }
    ],
    "Criterias": [
      {
        "Operator": "AND",
        "Criterions": [
          {
            "Comment": "Red Hat Enterprise Linux 9 is installed",
            "TestRef": "oval:com.redhat.cve:tst:201714623005"
          },
          {
            "Comment": "rhcos is installed",
            "TestRef": "oval:com.redhat.cve:tst:202249043001"
          },
          {
            "Comment": "rhcos is signed with Red Hat redhatrelease2 key",
            "TestRef": "oval:com.redhat.cve:tst:202249043002"
          }
        ]
      }
    ]
  }
}