{
  "Class": "vulnerability",
  "ID": "oval:com.redhat.cve:def:202230631",
  "Version": "636",
  "Metadata": {
    "Title": "golang: compress/gzip: stack exhaustion in Reader.Read (moderate)",
    "References": [
      {
        "Source": "CVE",
        "RefID": "CVE-2022-30631",
        "RefURL": "https://access.redhat.com/security/cve/CVE-2022-30631"
      }
    ],
    "Description": "DOCUMENTATION: A flaw was found in golang. Calling the Reader, Read method on an archive that contains a large number of concatenated 0-length compressed files can cause a panic issue due to stack exhaustion. \n            STATEMENT: To exploit CVE-2022-30631, an attacker supplies a specially crafted gzip archive to a Go application that uses a vulnerable version of the compress/gzip package without adequate input validation. This can lead to uncontrolled recursion, resulting in stack exhaustion and causing the application to panic, thereby affecting its availability.\n\nAs this is merely a DoS and there is no known way to control the instruction pointer, RH ProdSec has set the impact of this vulnerabilty to \"Moderate\".\n\nWithin regulated environments, a combination of the following controls acts as a significant barrier to successfully exploiting a CWE-1325: Improperly Controlled Sequential Memory Allocation vulnerability and therefore downgrades the severity of this particular CVE from Moderate to Low.\n\nAccess to the platform is granted only after successful hard token-based multi-factor authentication (MFA) and is governed by least privilege to ensure only authorized users and roles can execute or modify code. Static code analysis and peer reviews enforce strong input validation and error handling, preventing improperly validated inputs from causing system instability, data exposure, or privilege escalation. In the event of successful exploitation, process isolation limits the impact of excessive sequential memory allocation by restricting memory use per process, preventing any single process from exhausting system resources. Finally, the platform uses memory protection mechanisms such as Data Execution Prevention (DEP) and Address Space Layout Randomization (ASLR) to reduce the risk of memory allocation-based attacks.",
    "Advisory": {
      "From": "secalert@redhat.com",
      "Severity": "Moderate",
      "Issued": {},
      "Updated": {
        "Date": "2025-05-06"
      },
      "Cves": [
        {
          "CveID": "CVE-2022-30631",
          "Cvss3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "Cwe": "CWE-1325",
          "Impact": "moderate",
          "Href": "https://access.redhat.com/security/cve/CVE-2022-30631",
          "Public": "20220712"
        }
      ],
      "AffectedCpeList": [
        "cpe:/a:redhat:storage:3.5",
        "cpe:/a:redhat:storage:3.5:nfs:el8",
        "cpe:/a:redhat:storage:3.5:samba:el8",
        "cpe:/a:redhat:storage:3.5:server:el8"
      ],
      "Affected": {
        "Resolution": {
          "State": "Affected"
        }
      }
    }
  },
  "Criteria": {
    "Operator": "OR",
    "Criterions": [
      {
        "Comment": "Red Hat Enterprise Linux must be installed",
        "TestRef": "oval:com.redhat.cve:tst:201718638004"
      }
    ],
    "Criterias": [
      {
        "Operator": "AND",
        "Criterions": [
          {
            "Comment": "Red Hat Enterprise Linux 8 is installed",
            "TestRef": "oval:com.redhat.cve:tst:201718638003"
          },
          {
            "Comment": "go-toolset-7-golang is installed",
            "TestRef": "oval:com.redhat.cve:tst:20221705001"
          },
          {
            "Comment": "go-toolset-7-golang is signed with Red Hat redhatrelease2 key",
            "TestRef": "oval:com.redhat.cve:tst:20221705002"
          }
        ]
      }
    ]
  }
}